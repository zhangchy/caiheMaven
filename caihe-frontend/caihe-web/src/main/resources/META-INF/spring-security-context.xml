<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
						http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.2.xsd"
	default-autowire="byName">
	<security:http pattern="/resource/**" security="none" />
	<security:http pattern="/login" security="none" />
	<security:http pattern="/signin_fail" security="none" />
	<security:http pattern="/signin_deny" security="none" />
	<!-- <security:intercept-url pattern="/**"
			access="isAuthenticated()" /> -->
	
	<security:http auto-config="true" use-expressions="true" disable-url-rewriting="true" access-denied-page="${security.accessDeniedPage}">
		<!-- 登录过滤器 -->
		<security:form-login
			authentication-success-handler-ref="myAuthenticationSuccessHandler"
			authentication-failure-url="${security.authenticationFailureUrl}"
			login-page="${security.loginPage}" 
			default-target-url="${security.defaultTargetUrl}"
			login-processing-url="${security.loginProcessingUrl}"
			username-parameter="${login.username.parameter}" 
			password-parameter="${login.password.parameter}"/>
			 <!-- <security:intercept-url pattern="/**"
			access="isAuthenticated()" /> -->
		<!-- 自定义授权 实现RBAC -->
		<!-- <security:custom-filter ref="mySecurityInterceptorFilter"
			before="FILTER_SECURITY_INTERCEPTOR" /> -->
		<security:remember-me key="${rememberMeServices.key}"
			services-ref="rememberMeService" />
		<!--key="${rememberMeServices.key}" 
			data-source-ref="dataSource" 
			user-service-ref="userService" 
			token-validity-seconds="${rememberMeServices.token.valid.seconds}" 
			remember-me-parameter="${rememberMeServices.parameter}"/> -->

		<!-- session管理 -->
		<security:session-management>
			<security:concurrency-control
				max-sessions="1" expired-url="/login" />
		</security:session-management>
	</security:http>

	<security:authentication-manager alias="myAuthenticationManager">
		<security:authentication-provider
			user-service-ref="userService">
			<security:password-encoder ref="passwordEncoder"></security:password-encoder>
		</security:authentication-provider>
	</security:authentication-manager>

	<!-- remember me -->
	<bean id="rememberMeService"
		class="org.springframework.security.web.authentication.rememberme.PersistentTokenBasedRememberMeServices">
		<property name="userDetailsService" ref="userService" />
		<property name="key" value="${rememberMeServices.key}" />
		<property name="parameter" value="${rememberMeServices.parameter}" />
		<property name="tokenValiditySeconds" value="${rememberMeServices.token.valid.seconds}"></property>
		<property name="tokenRepository">
			<bean
				class="org.springframework.security.web.authentication.rememberme.JdbcTokenRepositoryImpl">
				<property name="dataSource" ref="dataSource" />
				<property name="createTableOnStartup" value="false" />
			</bean>
		</property>
		<property name="cookieName" value="${rememberMeServices.cookie.name}"></property>
	</bean>

	<bean id="passwordEncoder" class="ouer.caihe.maven.security.MyPasswordEncoder">
	</bean>
	<!-- 自定义过滤器 -->
	<!-- <bean id="mySecurityInterceptorFilter"
		class="org.springframework.security.web.access.intercept.FilterSecurityInterceptor">
		<property name="securityMetadataSource" ref="mySecurityMetadataSource" />
		FilterInvocationSecurityMetadataSource 接口实现类
		<property name="authenticationManager" ref="myAuthenticationManager" />
		鉴定管理类
		<property name="accessDecisionManager" ref="myAccessDecisionManager" />
	</bean> -->
</beans>
